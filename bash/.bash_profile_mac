#!/bin/bash

export EMAIL=andrew@aarchibald.com
export EDITOR=vim
export GIT_EDITOR=vim

# Directory aliases
alias ~='cd $HOME'
alias ..='cd ..'
alias dev='cd $HOME/dev'
alias godev='cd $HOME/go/src'

alias profile='code "$HOME/.bash_profile"'

alias bb='ssh -t schizo "ssh blackbird"'
alias de='ssh -t schizo "ssh germany"'

# SSH into a random CS lab machine
alias cs='CS_MACHINES=($(cat ~/cs_machines_random)); RANDOM_MACHINE="${CS_MACHINES[$RANDOM % ${#CS_MACHINES[@]}]}"; echo "ssh $RANDOM_MACHINE"; ssh "$RANDOM_MACHINE"'

alias ascii4='wspace $HOME/go/src/github.com/andrewarchi/nebula/programs/ascii4.out.ws'

# Bash 4+
# https://github.com/Homebrew/homebrew-command-not-found#requirements
PATH="/usr/local/bin/bash:$PATH"

# Homebrew Command Not Found
# https://github.com/Homebrew/homebrew-command-not-found
# Installation check is slow, so I removed it:
# if brew command command-not-found-init > /dev/null 2>&1; then eval "$(brew command-not-found-init)"; fi
eval "$(brew command-not-found-init)"

# Preview Markdown files like man
# http://blog.metamatt.com/blog/2013/01/09/previewing-markdown-files-from-the-terminal/
function mdless() {
  pandoc -s -f markdown -t man "$@" | groff -T utf8 -man | less
}

# Syntax highlighted cat
# https://stackoverflow.com/questions/7851134/syntax-highlighting-colorizing-cat/14799752#14799752
alias codecat='pygmentize -g -O style=solarized-dark,linenos=1'
function codeless() {
  codecat "$@" | less -R
}

# Enable ls color output
# https://apple.stackexchange.com/questions/33677/how-can-i-configure-mac-terminal-to-have-color-ls-output
export CLICOLOR=1
export LSCOLORS=ExGxBxDxCxEgEdxbxgxcxd
alias l='ls -h'
alias ls='ls -h'
alias la='ls -Ah'
alias ll='ls -Alh'

# Git
alias master='git checkout master'
. "$HOME/.dotfiles/bash_completion/git-completion.bash"
alias g='git'
alias branch='git branch'
alias checkout='git checkout'
alias check='git checkout'
alias clone='git clone'
alias commit='git commit'
alias gdiff='git diff'
alias fetch='git fetch'
alias glog='git log'
alias pull='git pull'
alias push='git push'
# https://stackoverflow.com/questions/342969/how-do-i-get-bash-completion-to-work-with-aliases
__git_complete git __git_main
__git_complete branch _git_branch
__git_complete checkout _git_checkout
__git_complete check _git_checkout
__git_complete clone _git_clone
__git_complete commit _git_commit
__git_complete gdiff _git_diff
__git_complete fetch _git_fetch
__git_complete glog _git_log
__git_complete pull _git_pull
__git_complete push _git_push

clonedev() {
  url="$1"
  path="${url#https://}"
  path="${path#http://}"
  path="${path%.git}"
  repo="${path##*/}"
  path="${path%/*}"
  mkdir -p "$HOME/dev/$path"
  git clone "$url" "$HOME/dev/$path/$repo"
}

function tcommit() {
  repo=$(git rev-parse --show-toplevel)
  staged_files=$(git -C "$repo" diff --name-only --staged --diff-filter=d)

  if [ ! "$staged_files" ]; then
    echo "No staged files"
    return 1
  fi

  DATE=date
  if uname | grep -q "Darwin"; then
    # brew install coreutils
    DATE=gdate
  fi

  max_nanoseconds=0
  max_date=""

  while read -r file; do
    nanoseconds=$($DATE -r "$repo/$file" +'%s%N')
    if [ $nanoseconds -gt $max_nanoseconds ]; then
      max_nanoseconds=$nanoseconds
      max_date=$($DATE -r "$repo/$file" +'%Y-%m-%d %T.%N %z')
    fi
  done <<< "$staged_files"

  git -C "$repo" status

  ad="$max_date"
  cd="$max_date"
  [ -z ${GIT_AUTHOR_DATE+x} ]    || ad="$GIT_AUTHOR_DATE"
  [ -z ${GIT_COMMITTER_DATE+x} ] || cd="$GIT_COMMITTER_DATE"
  echo "Modify date: $max_date"
  echo "Author date: $ad"
  echo "Commit date: $cd"

  echo
  read -p "Commit? (y/n) " -n 1 -r
  echo
  if [[ $REPLY =~ ^[Yy]$ ]]; then
    GIT_AUTHOR_DATE="$ad" GIT_COMMITTER_DATE="$cd" git -C "$repo" commit "$@"
  fi
}

__git_complete tcommit _git_commit

# Powerline
powerline-daemon -q
POWERLINE_BASH_CONTINUATION=1
POWERLINE_BASH_SELECT=1
source "$HOME/Library/Python/2.7/lib/python/site-packages/powerline/bindings/bash/powerline.sh"

# Folder-based applications
PATH="$HOME/lib/bin:$PATH"
PATH="$HOME/dev/compsoc.dur.ac.uk/whitespace/WSpace/bin:$PATH"

# Aliases
alias weather='curl wttr.in'

# rsync command for copying from an NTFS drive.
# Permissions are not preserved; symlinks and times are preserved.
# Attributes set to rwxr-xr-x for dirs, rw-r--r-- for files.
# Excludes Thumbs.db and desktop.ini.
alias rsyncwin='rsync -rltDvzh --chmod=Du=rwx,Dgo=rx,Fu=rw,Fgo=r --exclude Thumbs.db --exclude desktop.ini'

# Reset permissions
# find . -type d -exec chmod 755 {} \;
# find . -type f -exec chmod 644 {} \;

# Go
export PATH="$HOME/go/bin:$PATH"

# Rust
export PATH="$HOME/.cargo/bin:$PATH"

# Yorick
export PATH="$HOME/dev/github.com/dhmunro/yorick/relocate/bin:$PATH"

[[ -r "/usr/local/etc/profile.d/bash_completion.sh" ]] && . "/usr/local/etc/profile.d/bash_completion.sh"

# LLVM (keg only, see Homebrew caveats)
export PATH="/usr/local/opt/llvm/bin:$PATH"
